plugins {
    id 'com.android.application'
    id 'androidx.navigation.safeargs'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.31'
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion 31

    defaultConfig {
        applicationId "ch.karimattia.workoutpixel"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 5
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            java {
                srcDirs 'src/main/java', 'src/main/java/2'
            }
        }
    }

    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }

    kotlinOptions {
        jvmTarget = "1.8"
        useIR = true
    }
    kapt {
        correctErrorTypes true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.0.0-beta09'
    }
}

//noinspection SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.activity:activity-ktx:1.3.1"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.testng:testng:7.3.0'

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"

    // Kotlin components
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

    // debugImplementation because LeakCanary should only run in debug builds.
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    def room_version = "2.3.0"
    // Room components
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"


    def nav_version = "2.4.0-alpha09"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha09"


    //Jetpack Compose UI
    implementation 'androidx.compose.ui:ui:1.1.0-alpha04'
    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.1.0-alpha04'
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation 'androidx.compose.foundation:foundation:1.1.0-alpha04'
    // Material Design
    implementation 'androidx.compose.material:material:1.1.0-alpha04'
    // Material design icons
    implementation 'androidx.compose.material:material-icons-core:1.1.0-alpha04'
    implementation 'androidx.compose.material:material-icons-extended:1.1.0-alpha04'
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0-alpha02'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0-beta01'
    // Integration with observables
    implementation 'androidx.compose.runtime:runtime-livedata:1.1.0-alpha04'
    implementation 'androidx.compose.runtime:runtime-rxjava2:1.1.0-alpha04'

    // LiveData
    implementation 'androidx.compose.runtime:runtime-livedata:1.1.0-alpha04'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.1.0-alpha04'

    // Pager: https://google.github.io/accompanist/pager/
    implementation "com.google.accompanist:accompanist-pager:0.18.0"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.18.0"

    // https://stackoverflow.com/questions/68672046/how-to-use-animated-vector-drawable-in-compose
    implementation("androidx.compose.animation:animation-graphics:1.1.0-alpha04")

    // Coil gif
    implementation("io.coil-kt:coil-compose:1.3.2")
    implementation("io.coil-kt:coil-gif:1.3.2")

    // Settings: https://github.com/alorma/Compose-Settings
    // implementation 'com.github.alorma:compose-settings:0.2.0'

/*
    // https://github.com/serbelga/ComposeColorPicker
    implementation 'com.sergiobelda.compose.colorpicker:colorpicker:1.0.0-dev04'
    // So that the colorpicker works
    implementation "com.google.accompanist:accompanist-flowlayout:0.18.0"
*/

    // https://github.com/vanpra/compose-material-dialogs
    implementation "io.github.vanpra.compose-material-dialogs:color:0.6.0"
    implementation "io.github.vanpra.compose-material-dialogs:core:0.6.0"

    // https://developer.android.com/topic/libraries/architecture/datastore#kts
    implementation("androidx.datastore:datastore:1.0.0")
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // https://dagger.dev/hilt/gradle-setup
    implementation 'com.google.dagger:hilt-android:2.38.1'
    kapt 'com.google.dagger:hilt-compiler:2.38.1'

    // https://github.com/Kotlin/kotlinx.serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"
}

repositories {
    mavenCentral()
    mavenCentral()
    google()
}